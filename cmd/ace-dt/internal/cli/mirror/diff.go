package mirror

import (
	"github.com/spf13/cobra"

	actions "git.act3-ace.com/ace/data/tool/internal/actions/mirror"
)

func newDiffCmd(tool *actions.Action) *cobra.Command {

	action := &actions.Diff{Action: tool}

	cmd := &cobra.Command{
		Use:   "diff MIRROR-ARTIFACT [EXISTING-IMAGE...]",
		Short: "List images within a mirror artifact and compare with existing images.",
		Long: `List images stored within a specified MIRROR-ARTIFACT and optionally compare them against other images.

A MIRROR-ARTIFACT is an OCI artifact generated by commands such as "ace-dt mirror gather" or "ace-dt mirror deserialize". It consolidates multiple images or multi-architecture indexes into a single repository.

By default, this command outputs a table of original references and digests of images contained within the MIRROR-ARTIFACT. Additional behaviors include:
- Comparing the images in MIRROR-ARTIFACT against one or more EXISTING-IMAGE references to highlight differences.
- Expanding nested mirror artifacts (when the --expand flag is set) to include all referenced images in the output.

The output is sent to standard output by default but can be redirected to a file using the -o flag. This command allows users to view and analyze the content of mirror artifacts without manually pulling and inspecting their manifests.
`,
		Example: `To list all images in "reg.example.com/repo/data:sync-45" to standard out:
ace-dt mirror diff reg.example.com/repo/data:sync-45

To list all images in "reg.example.com/repo/data:sync-45" to file output.txt:
ace-dt mirror diff reg.example.com/repo/data:sync-45 -o output.txt

To list all images in "reg.example.com/repo/data:sync-45" but exclude any images that exist in sync-44:
ace-dt mirror diff reg.example.com/repo/data:sync-45 reg.example.com/repo/data:sync-44

To list all images in "reg.example.com/repo/data:sync-45" and expand any gather indexes within the referenced artifact:
ace-dt mirror diff reg.example.com/repo/data:sync-45 --expand
`,
		Args: cobra.MinimumNArgs(1),
		RunE: func(cmd *cobra.Command, args []string) error {
			return action.Run(cmd.Context(), args[0], args[1:])
		},
	}

	cmd.Flags().StringVarP(&action.Output, "output", "o", "-", `Define a filepath to print to file or "-" to print to standard output (default behavior).`)
	cmd.Flags().BoolVar(&action.Expanded, "expand", false, "Expand any nested mirror artifacts to show all images in list. (Default behavior only shows mirror artifact reference.)")
	return cmd
}
